{
  "version": 3,
  "sources": ["../src/index.ts", "../../shared/src/index.ts", "../src/warn.ts", "../src/reactive.ts", "../src/effect.ts"],
  "sourcesContent": ["export * from './reactive'\nexport * from './effect'\n// import { isObject } from '@vue/shared'\n", "export const isObject = (v: unknown): v is Record<any, any> =>\n  typeof v === 'object' && v !== null\n", "export function warn(msg: string, ...args: any[]) {\n  console.warn(`Vue warn ${msg}: `, ...args)\n}\n", "import { isObject } from '@vue/shared'\nimport { warn } from './warn'\n\nconst enum ReactiveFlags {\n  IS_REACTIVE = '__v_is_reactive',\n}\n\nconst reactiveMap = new WeakMap<any, any>()\nexport function reactive(target) {\n  if (!isObject(target)) {\n    warn('reactive', `target should be an object`)\n    return\n  }\n  if (target[ReactiveFlags.IS_REACTIVE]) {\n    return target\n  }\n\n  const existingProxy = reactiveMap.get(target)\n  if (existingProxy) {\n    return existingProxy\n  }\n\n  const proxy = new Proxy(target, {\n    get(target, key, receiver) {\n      if (key === ReactiveFlags.IS_REACTIVE) {\n        return true\n      }\n\n      return Reflect.get(target, key, receiver)\n    },\n    set(target, key, value, receiver) {\n      return Reflect.set(target, key, value, receiver)\n    },\n  })\n\n  reactiveMap.set(target, proxy)\n  return proxy\n}\n", "export function effect() {}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,MAAM,WAAW,CAAC,MACvB,OAAO,MAAM,YAAY,MAAM;;;ACD1B,gBAAc,QAAgB,MAAa;AAChD,YAAQ,KAAK,YAAY,SAAS,GAAG,IAAI;AAAA,EAC3C;;;ACKA,MAAM,cAAc,oBAAI,QAAkB;AACnC,oBAAkB,QAAQ;AAC/B,QAAI,CAAC,SAAS,MAAM,GAAG;AACrB,WAAK,YAAY,4BAA4B;AAC7C;AAAA,IACF;AACA,QAAI,OAAO,sCAA4B;AACrC,aAAO;AAAA,IACT;AAEA,UAAM,gBAAgB,YAAY,IAAI,MAAM;AAC5C,QAAI,eAAe;AACjB,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,IAAI,MAAM,QAAQ;AAAA,MAC9B,IAAI,SAAQ,KAAK,UAAU;AACzB,YAAI,QAAQ,qCAA2B;AACrC,iBAAO;AAAA,QACT;AAEA,eAAO,QAAQ,IAAI,SAAQ,KAAK,QAAQ;AAAA,MAC1C;AAAA,MACA,IAAI,SAAQ,KAAK,OAAO,UAAU;AAChC,eAAO,QAAQ,IAAI,SAAQ,KAAK,OAAO,QAAQ;AAAA,MACjD;AAAA,IACF,CAAC;AAED,gBAAY,IAAI,QAAQ,KAAK;AAC7B,WAAO;AAAA,EACT;;;ACrCO,oBAAkB;AAAA,EAAC;",
  "names": []
}
